definitions:
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      text:
        type: string
      title:
        type: string
    type: object
  response.CreateSuccessResponse:
    properties:
      message:
        example: Песня успешно добавлена
        type: string
    type: object
  response.DeleteSuccessResponse:
    properties:
      message:
        example: Песня успешно удалена
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        example: текст ошибки
        type: string
    type: object
  response.TextResponse:
    properties:
      page:
        example: 1
        type: integer
      per_page:
        example: 5
        type: integer
      song_id:
        example: 1
        type: integer
      total_verses:
        example: 2
        type: integer
      verses:
        example:
        - '[Куплет 1'
        - ' Куплет 2]'
        items:
          type: string
        type: array
    type: object
  response.UpdateResponse:
    properties:
      message:
        example: Данные песни успешно обновлены
        type: string
      song:
        $ref: '#/definitions/models.Song'
    type: object
  songs.InputSong:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  songs.UpdateSongInput:
    properties:
      group:
        type: string
      link:
        type: string
      release_date:
        type: string
      text:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
  title: Онлайн библиотеки песен
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: 'Получает список песен по фильтрам: group, title, release_date,
        link; поддерживается пагинация'
      parameters:
      - description: Группа
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: title
        type: string
      - description: Дата релиза
        in: query
        name: release_date
        type: string
      - description: Ссылка
        in: query
        name: link
        type: string
      - description: Номер страницы (начиная с 1)
        in: query
        name: page
        type: integer
      - description: Количество записей на страницу
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка получения данных
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получение данных библиотеки с фильтрацией и пагинацией
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавляет новую песню в базу данных
      parameters:
      - description: Добавление песни
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/songs.InputSong'
      produces:
      - application/json
      responses:
        "201":
          description: Песня успешно добавлена
          schema:
            $ref: '#/definitions/response.CreateSuccessResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка добавления песни
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Добавление новой песни
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет песню из базы данных по указанному идентификатору
      parameters:
      - description: Идентификатор песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно удалена
          schema:
            $ref: '#/definitions/response.DeleteSuccessResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка удаления песни
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Удаление песни
      tags:
      - songs
    patch:
      consumes:
      - application/json
      description: Частичное обновление данных песни по её ID
      parameters:
      - description: Идентификатор песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/songs.UpdateSongInput'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление песни
          schema:
            $ref: '#/definitions/response.UpdateResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка обновления данных песни
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновление данных песни
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Возвращает куплеты текста песни по указанной странице и количеству
        куплетов на странице
      parameters:
      - description: Идентификатор песни
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Номер страницы (начиная с 1)
        in: query
        name: page
        type: integer
      - default: 5
        description: Количество куплетов на странице
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни с пагинацией по куплетам
          schema:
            $ref: '#/definitions/response.TextResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получение текста песни с пагинацией по куплетам
      tags:
      - songs
swagger: "2.0"
